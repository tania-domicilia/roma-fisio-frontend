{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FA INNOVATIONS TECH\\\\Downloads\\\\Nuovo progetto fisio\\\\roma-fisio-frontend (13)\\\\src\\\\pages\\\\ZonePreferitePage.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, FeatureGroup, GeoJSON } from \"react-leaflet\";\nimport { EditControl } from \"react-leaflet-draw\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = import.meta.env.VITE_API_URL || \"http://localhost:8000\";\nexport default function ZonePreferitePage() {\n  _s();\n  const [fisioterapisti, setFisioterapisti] = useState([]);\n  const [selectedFisioId, setSelectedFisioId] = useState(\"\");\n  const [existingZones, setExistingZones] = useState(null);\n  useEffect(() => {\n    fetch(`${API_URL}/fisioterapisti`).then(res => res.json()).then(data => setFisioterapisti(data));\n  }, []);\n  useEffect(() => {\n    if (selectedFisioId) {\n      const fisio = fisioterapisti.find(f => f.id === selectedFisioId);\n      if (fisio && fisio.geo_zones) {\n        try {\n          setExistingZones(JSON.parse(fisio.geo_zones));\n        } catch (e) {\n          console.error(\"Errore parsing GeoJSON:\", e);\n        }\n      } else {\n        setExistingZones(null);\n      }\n    }\n  }, [selectedFisioId, fisioterapisti]);\n  const handleCreated = async e => {\n    const layer = e.layer;\n    const geojson = layer.toGeoJSON();\n    const payload = {\n      geo_zones: JSON.stringify({\n        type: \"FeatureCollection\",\n        features: [geojson]\n      })\n    };\n    if (!selectedFisioId) {\n      alert(\"Seleziona prima un fisioterapista!\");\n      return;\n    }\n    await fetch(`${API_URL}/fisioterapisti/${selectedFisioId}/zone`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(payload)\n    });\n    alert(\"Zona salvata!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Zone Preferite\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-1\",\n        children: \"Seleziona Fisioterapista:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"border p-2 w-full\",\n        value: selectedFisioId,\n        onChange: e => setSelectedFisioId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Scegli --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), fisioterapisti.map(f => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: f.id,\n          children: f.nominativo\n        }, f.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [41.89, 12.49],\n      zoom: 11,\n      style: {\n        height: \"70vh\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"Map data \\xA9 <a href=\\\"https://openstreetmap.org\\\">OpenStreetMap</a>\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), existingZones && /*#__PURE__*/_jsxDEV(GeoJSON, {\n        data: existingZones,\n        style: {\n          color: \"green\",\n          weight: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(FeatureGroup, {\n        children: /*#__PURE__*/_jsxDEV(EditControl, {\n          position: \"topright\",\n          onCreated: handleCreated,\n          draw: {\n            rectangle: false,\n            circle: false,\n            marker: false,\n            circlemarker: false,\n            polyline: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(ZonePreferitePage, \"Pey+nWzGc8lPm2ov2HbO5VXNfoc=\");\n_c = ZonePreferitePage;\nvar _c;\n$RefreshReg$(_c, \"ZonePreferitePage\");","map":{"version":3,"names":["useEffect","useState","MapContainer","TileLayer","FeatureGroup","GeoJSON","EditControl","jsxDEV","_jsxDEV","API_URL","import","meta","env","VITE_API_URL","ZonePreferitePage","_s","fisioterapisti","setFisioterapisti","selectedFisioId","setSelectedFisioId","existingZones","setExistingZones","fetch","then","res","json","data","fisio","find","f","id","geo_zones","JSON","parse","e","console","error","handleCreated","layer","geojson","toGeoJSON","payload","stringify","type","features","alert","method","headers","body","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","map","nominativo","center","zoom","style","height","width","attribution","url","color","weight","position","onCreated","draw","rectangle","circle","marker","circlemarker","polyline","_c","$RefreshReg$"],"sources":["C:/Users/FA INNOVATIONS TECH/Downloads/Nuovo progetto fisio/roma-fisio-frontend (13)/src/pages/ZonePreferitePage.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, FeatureGroup, GeoJSON } from \"react-leaflet\";\nimport { EditControl } from \"react-leaflet-draw\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\n\nconst API_URL = import.meta.env.VITE_API_URL || \"http://localhost:8000\";\n\nexport default function ZonePreferitePage() {\n  const [fisioterapisti, setFisioterapisti] = useState([]);\n  const [selectedFisioId, setSelectedFisioId] = useState(\"\");\n  const [existingZones, setExistingZones] = useState(null);\n\n  useEffect(() => {\n    fetch(`${API_URL}/fisioterapisti`)\n      .then((res) => res.json())\n      .then((data) => setFisioterapisti(data));\n  }, []);\n\n  useEffect(() => {\n    if (selectedFisioId) {\n      const fisio = fisioterapisti.find((f) => f.id === selectedFisioId);\n      if (fisio && fisio.geo_zones) {\n        try {\n          setExistingZones(JSON.parse(fisio.geo_zones));\n        } catch (e) {\n          console.error(\"Errore parsing GeoJSON:\", e);\n        }\n      } else {\n        setExistingZones(null);\n      }\n    }\n  }, [selectedFisioId, fisioterapisti]);\n\n  const handleCreated = async (e) => {\n    const layer = e.layer;\n    const geojson = layer.toGeoJSON();\n    const payload = {\n      geo_zones: JSON.stringify({\n        type: \"FeatureCollection\",\n        features: [geojson],\n      }),\n    };\n\n    if (!selectedFisioId) {\n      alert(\"Seleziona prima un fisioterapista!\");\n      return;\n    }\n\n    await fetch(`${API_URL}/fisioterapisti/${selectedFisioId}/zone`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(payload),\n    });\n\n    alert(\"Zona salvata!\");\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-xl font-bold mb-4\">Zone Preferite</h1>\n\n      <div className=\"mb-4\">\n        <label className=\"block mb-1\">Seleziona Fisioterapista:</label>\n        <select\n          className=\"border p-2 w-full\"\n          value={selectedFisioId}\n          onChange={(e) => setSelectedFisioId(e.target.value)}\n        >\n          <option value=\"\">-- Scegli --</option>\n          {fisioterapisti.map((f) => (\n            <option key={f.id} value={f.id}>\n              {f.nominativo}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <MapContainer center={[41.89, 12.49]} zoom={11} style={{ height: \"70vh\", width: \"100%\" }}>\n        <TileLayer\n          attribution='Map data &copy; <a href=\"https://openstreetmap.org\">OpenStreetMap</a>'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {existingZones && <GeoJSON data={existingZones} style={{ color: \"green\", weight: 2 }} />}\n        <FeatureGroup>\n          <EditControl\n            position=\"topright\"\n            onCreated={handleCreated}\n            draw={{\n              rectangle: false,\n              circle: false,\n              marker: false,\n              circlemarker: false,\n              polyline: false,\n            }}\n          />\n        </FeatureGroup>\n      </MapContainer>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}